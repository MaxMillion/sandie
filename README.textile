"Sandie":http://github.com/premasagar/sandie is a simple method for loading external JavaScript files into a page without affecting the global scope, to avoid collisions between conflicting scripts. The scripts are sandboxed inside the window of a temporary iframe, and then returned to a callback function, to be used elsewhere on the page.

* by "Premasagar Rose":http://github.com/premasagar
** "premasagar.com":http://premasagar.com / "dharmafly.com":http://dharmafly.com
* "MIT license":http://opensource.org/licenses/mit-license.php


h1. Usage


h2. Sandie avoids var collisions between competing scripts

bc. var foo = 1;
sandie(
    'script.js',    // this script contains 'var foo = 2;'
    'foo',          // the global var to capture from the script
    function(sandboxedFoo){ // callback function
        alert(foo); // 1 (from global scope)
        alert(sandboxedFoo); // 2 (from the sandboxed script)
    }
);


h2. Load one script, and return one variable:

bc. sandie(
    'http://example.com/script.js',
    'foo', // the global var 'foo' will be returned
    function(foo){
        alert(foo);
    }
);


h2. Load multiple scripts, and return multiple variables:

bc. sandie(
    ['script1.js', 'script2.js'],
    ['foo1', 'foo2'], // the global vars, foo1 and foo2 will be returned
    function(vars){
        alert(vars.foo1 + vars.foo2);
    }
);
